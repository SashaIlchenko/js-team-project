{"mappings":"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","sources":["src/library.js","src/js/render-library.js"],"sourcesContent":["import './js/darktheme';\nimport './js/render-library';\n\nimport './js/page-content-loader';\nimport './js/loader-spinner';\nimport './js/scroll-up-arrow';\nimport './js/modalMovie.js';\n","import { onSpinnerDisabled, onSpinnerEnabled } from './loader-spinner';\nimport { genres } from '../data/genres.json';\nimport { closeModalBtn, backdgop } from './modalMovie';\n\nconst emptyLibraryContaineRef = document.querySelector('.library-empty');\nconst libraryListRef = document.querySelector('.library_list');\nconst watchedLibraryBtn = document.querySelector('.js-watched');\nconst queueLibraryBtn = document.querySelector('.js-queue');\n\nonWatchedLibraryBtnClick();\n\nwatchedLibraryBtn.addEventListener('click', onWatchedLibraryBtnClick);\nqueueLibraryBtn.addEventListener('click', onQueueLibraryBtnClick);\ncloseModalBtn.addEventListener('click', updateLibraryMarkup);\ndocument.addEventListener('keydown', event => closeModalOnEscape(event));\nbackdgop.addEventListener('click', event => closeModalOnbackDrop(event));\n\nfunction onWatchedLibraryBtnClick() {\n  queueLibraryBtn.classList.remove('active-button');\n  watchedLibraryBtn.classList.add('active-button');\n\n  libraryListRef.innerHTML = '';\n\n  const parsedWatchedFilms = JSON.parse(localStorage.getItem('watchedList'));\n\n  if (!parsedWatchedFilms || parsedWatchedFilms.length === 0) {\n    emptyLibraryContaineRef.style.display = 'block';\n    return;\n  } else {\n    emptyLibraryContaineRef.style.display = 'none';\n\n    const arrLocalFilms = parsedWatchedFilms.map(id => {\n      return fetchLibraryMovieByID(id).then(data => {\n        createMovieLibraryMarkup(data);\n      });\n    });\n  }\n}\n\nfunction onQueueLibraryBtnClick() {\n  watchedLibraryBtn.classList.remove('active-button');\n  queueLibraryBtn.classList.add('active-button');\n\n  libraryListRef.innerHTML = '';\n\n  const parsedQueueFilms = JSON.parse(localStorage.getItem('queueList'));\n\n  if (!parsedQueueFilms || parsedQueueFilms.length === 0) {\n    emptyLibraryContaineRef.style.display = 'block';\n    return;\n  } else {\n    emptyLibraryContaineRef.style.display = 'none';\n    const arrLocalFilms = parsedQueueFilms.map(id => {\n      return fetchLibraryMovieByID(id).then(data => {\n        createMovieLibraryMarkup(data);\n      });\n    });\n  }\n}\n\nfunction createMovieLibraryMarkup({\n  id,\n  title,\n  name,\n  poster_path,\n  genres,\n  release_date,\n  first_air_date,\n  vote_average,\n}) {\n  const genreIds = [];\n  genreIds.push(genres.map(genreId => genreId.id));\n  const genresArr = genreIds[0];\n\n  const markup = `<li class=\"movieCard\" data=\"${id}\">\n      <div class=\"movieCard__img-wrapper\">\n      <img src=\"https://image.tmdb.org/t/p/w500/${poster_path}\"\n        alt=\"${title || name} movie poster\"\n        loading=\"lazy\"\n        class=\"movieCard__img\"\n      />\n      </div>\n      <div class=\"movieCard__text\">\n        <h2 class=\"movieCard__title\">${(title || name).toUpperCase()}</h2>\n        <p class=\"movieCard__info\"> ${genereteGenresList(\n          genresArr\n        )} | ${new Date(release_date || first_air_date).getFullYear()}\n          <span class=\"movieCard__rate\">${vote_average.toFixed(1)}</span></p>\n      </div>\n      </li> `;\n\n  libraryListRef.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction genereteGenresList(ids) {\n  const movieGenres = [];\n  genres.forEach(genre => {\n    if (ids.includes(genre.id)) {\n      movieGenres.push(genre.name);\n    }\n  });\n  if (movieGenres.length > 2) {\n    return `${movieGenres[0]}, ${movieGenres[1]}, Other`;\n  }\n\n  return movieGenres.join(', ');\n}\n\nasync function fetchLibraryMovieByID(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const API_KEY = 'e8d94f3e976148bda0a5c640d4df112b';\n\n  onSpinnerEnabled();\n  const response = await fetch(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  onSpinnerDisabled();\n\n  const data = await response.json();\n\n  return data;\n}\n\nfunction updateLibraryMarkup() {\n  const parsedWatchedFilms = JSON.parse(localStorage.getItem('watchedList'));\n  const parsedQueueFilms = JSON.parse(localStorage.getItem('queueList'));\n\n  if (!parsedWatchedFilms || parsedWatchedFilms.length === 0) {\n    libraryListRef.innerHTML = '';\n    emptyLibraryContaineRef.style.display = 'block';\n  }\n  //\n  else if (!parsedQueueFilms || parsedQueueFilms.length === 0) {\n    libraryListRef.innerHTML = '';\n    emptyLibraryContaineRef.style.display = 'block';\n  }\n  //\n  else if (\n    watchedLibraryBtn.classList.contains('active-button') &&\n    parsedWatchedFilms.length > 0\n  ) {\n    emptyLibraryContaineRef.style.display = 'none';\n    libraryListRef.innerHTML = '';\n\n    const arrLocalFilms = parsedWatchedFilms.map(id => {\n      return fetchLibraryMovieByID(id).then(data => {\n        createMovieLibraryMarkup(data);\n      });\n    });\n  }\n  //\n  else if (\n    queueLibraryBtn.classList.contains('active-button') &&\n    parsedQueueFilms.length > 0\n  ) {\n    emptyLibraryContaineRef.style.display = 'none';\n    libraryListRef.innerHTML = '';\n\n    const arrLocalFilms = parsedQueueFilms.map(id => {\n      return fetchLibraryMovieByID(id).then(data => {\n        createMovieLibraryMarkup(data);\n      });\n    });\n  }\n}\n\nfunction closeModalOnEscape(event) {\n  if (event.key !== 'Escape') {\n    return;\n  }\n\n  updateLibraryMarkup();\n}\n\nfunction closeModalOnbackDrop(event) {\n  if (event.target === event.currentTarget) {\n    updateLibraryMarkup();\n  }\n}\n"],"names":["parcelRequire","$gcQJ6","$9c5a8c3a213c0f0b$var$emptyLibraryContaineRef","document","querySelector","$9c5a8c3a213c0f0b$var$libraryListRef","$9c5a8c3a213c0f0b$var$watchedLibraryBtn","$9c5a8c3a213c0f0b$var$queueLibraryBtn","$9c5a8c3a213c0f0b$var$onWatchedLibraryBtnClick","classList","remove","add","innerHTML","parsedWatchedFilms","JSON","parse","localStorage","getItem","length","style","display","map","id","$9c5a8c3a213c0f0b$var$fetchLibraryMovieByID","then","data","$9c5a8c3a213c0f0b$var$createMovieLibraryMarkup","title","name","poster_path","genres","release_date","first_air_date","vote_average","genreIds","push","genreId","genresArr","markup","toUpperCase","ids","movieGenres","$aZ3a6","forEach","genre","includes","join","$9c5a8c3a213c0f0b$var$genereteGenresList","Date","getFullYear","toFixed","insertAdjacentHTML","async","onSpinnerEnabled","response","fetch","onSpinnerDisabled","json","$9c5a8c3a213c0f0b$var$updateLibraryMarkup","parsedQueueFilms","contains","addEventListener","$8AEpj","closeModalBtn","event","key","$9c5a8c3a213c0f0b$var$closeModalOnEscape","backdgop","target","currentTarget","$9c5a8c3a213c0f0b$var$closeModalOnbackDrop"],"version":3,"file":"library.2afa0d90.js.map"}