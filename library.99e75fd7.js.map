{"mappings":"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","sources":["src/library.js","src/js/render-library.js"],"sourcesContent":["import './js/darktheme';\nimport './js/render-library';\n\nimport './js/page-content-loader';\nimport './js/loader-spinner';\nimport './js/scroll-up-arrow';\nimport './js/modalMovie.js';\n// import './js/pagination-library';\n// import { onFooterFixed, onFooterNoFixed } from './js/render-cards.js';\n","import { onSpinnerDisabled, onSpinnerEnabled } from './loader-spinner';\nimport { genres } from '../data/genres.json';\n// import { onFooterFixed, onFooterNoFixed } from './render-cards';\nimport { closeModalBtn, backdgop } from './modalMovie';\n\nconst emptyLibraryContaineRef = document.querySelector('.library-empty');\nconst libraryListRef = document.querySelector('.library_list');\nconst watchedLibraryBtn = document.querySelector('.js-watched');\nconst queueLibraryBtn = document.querySelector('.js-queue');\n\nexport const watchedStorageData = localStorage.getItem('watchedList');\nexport const queueStorageData = localStorage.getItem('queueList');\n\nonWatchedLibraryBtnClick();\n\nwatchedLibraryBtn.addEventListener('click', onWatchedLibraryBtnClick);\nqueueLibraryBtn.addEventListener('click', onQueueLibraryBtnClick);\ncloseModalBtn.addEventListener('click', updateLibraryMarkup);\ndocument.addEventListener('keydown', event => closeModalOnEscape(event));\nbackdgop.addEventListener('click', event => closeModalOnbackDrop(event));\n\nfunction onWatchedLibraryBtnClick() {\n  queueLibraryBtn.classList.remove('active-button');\n  watchedLibraryBtn.classList.add('active-button');\n\n  libraryListRef.innerHTML = '';\n\n  const parsedWatchedFilms = JSON.parse(localStorage.getItem('watchedList'));\n\n  if (!parsedWatchedFilms || parsedWatchedFilms.length === 0) {\n    emptyLibraryContaineRef.style.display = 'block';\n    return;\n  } else {\n    emptyLibraryContaineRef.style.display = 'none';\n    const arrLocalFilms = parsedWatchedFilms.map(id => {\n      return fetchLibraryMovieByID(id).then(data => {\n        createMovieLibraryMarkup(data);\n      });\n    });\n  }\n}\n\nfunction onQueueLibraryBtnClick() {\n  watchedLibraryBtn.classList.remove('active-button');\n  queueLibraryBtn.classList.add('active-button');\n\n  libraryListRef.innerHTML = '';\n\n  const parsedQueueFilms = JSON.parse(localStorage.getItem('queueList'));\n\n  if (!parsedQueueFilms || parsedQueueFilms.length === 0) {\n    emptyLibraryContaineRef.style.display = 'block';\n    return;\n  } else {\n    emptyLibraryContaineRef.style.display = 'none';\n    const arrLocalFilms = parsedQueueFilms.map(id => {\n      return fetchLibraryMovieByID(id).then(data => {\n        createMovieLibraryMarkup(data);\n      });\n    });\n  }\n}\n\nfunction createMovieLibraryMarkup({\n  id,\n  title,\n  name,\n  poster_path,\n  genres,\n  release_date,\n  first_air_date,\n  vote_average,\n}) {\n  const genreIds = [];\n  genreIds.push(genres.map(genreId => genreId.id));\n  const genresArr = genreIds[0];\n\n  const markup = `<li class=\"movieCard\" data=\"${id}\">\n      <div class=\"movieCard__img-wrapper\">\n      <img src=\"https://image.tmdb.org/t/p/w500/${poster_path}\"\n        alt=\"${title || name} movie poster\"\n        loading=\"lazy\"\n        class=\"movieCard__img\"\n      />\n      </div>\n      <div class=\"movieCard__text\">\n        <h2 class=\"movieCard__title\">${(title || name).toUpperCase()}</h2>\n        <p class=\"movieCard__info\"> ${genereteGenresList(\n          genresArr\n        )} | ${new Date(release_date || first_air_date).getFullYear()}\n          <span class=\"movieCard__rate\">${vote_average.toFixed(1)}</span></p>\n      </div>\n      </li> `;\n\n  libraryListRef.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction genereteGenresList(ids) {\n  const movieGenres = [];\n  genres.forEach(genre => {\n    if (ids.includes(genre.id)) {\n      movieGenres.push(genre.name);\n    }\n  });\n  if (movieGenres.length > 2) {\n    return `${movieGenres[0]}, ${movieGenres[1]}, Other`;\n  }\n\n  return movieGenres.join(', ');\n}\n\nasync function fetchLibraryMovieByID(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const API_KEY = 'e8d94f3e976148bda0a5c640d4df112b';\n\n  onSpinnerEnabled();\n  const response = await fetch(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  onSpinnerDisabled();\n\n  const data = await response.json();\n\n  return data;\n}\n\nfunction updateLibraryMarkup() {\n  if (!watchedStorageData || watchedStorageData.length === 0) {\n    emptyLibraryContaineRef.style.display = 'block';\n  }\n  //\n  else if (!queueStorageData || queueStorageData.length === 0) {\n    emptyLibraryContaineRef.style.display = 'block';\n  }\n  //\n  else if (watchedLibraryBtn.classList.contains('active-button')) {\n    emptyLibraryContaineRef.style.display = 'none';\n    libraryListRef.innerHTML = '';\n\n    const parsedWatchedFilms = JSON.parse(localStorage.getItem('watchedList'));\n    const arrLocalFilms = parsedWatchedFilms.map(id => {\n      return fetchLibraryMovieByID(id).then(data => {\n        createMovieLibraryMarkup(data);\n      });\n    });\n  }\n  //\n  else {\n    emptyLibraryContaineRef.style.display = 'none';\n    libraryListRef.innerHTML = '';\n\n    const parsedQueueFilms = JSON.parse(localStorage.getItem('queueList'));\n    const arrLocalFilms = parsedQueueFilms.map(id => {\n      return fetchLibraryMovieByID(id).then(data => {\n        createMovieLibraryMarkup(data);\n      });\n    });\n  }\n}\n\nfunction closeModalOnEscape(event) {\n  if (event.key !== 'Escape') {\n    return;\n  }\n\n  updateLibraryMarkup();\n}\n\nfunction closeModalOnbackDrop(event) {\n  if (event.target === event.currentTarget) {\n    updateLibraryMarkup();\n  }\n}\n"],"names":["parcelRequire","$6pIJ7","$76d8f5d523e840d5$var$emptyLibraryContaineRef","document","querySelector","$76d8f5d523e840d5$var$libraryListRef","$76d8f5d523e840d5$var$watchedLibraryBtn","$76d8f5d523e840d5$var$queueLibraryBtn","$76d8f5d523e840d5$export$43d682d87a7f8ef5","localStorage","getItem","$76d8f5d523e840d5$export$574324421d33b271","$76d8f5d523e840d5$var$onWatchedLibraryBtnClick","classList","remove","add","innerHTML","parsedWatchedFilms","JSON","parse","length","style","display","map","id","$76d8f5d523e840d5$var$fetchLibraryMovieByID","then","data","$76d8f5d523e840d5$var$createMovieLibraryMarkup","title","name","poster_path","genres","release_date","first_air_date","vote_average","genreIds","push","genreId","genresArr","markup","toUpperCase","ids","movieGenres","$2j7ES","forEach","genre","includes","join","$76d8f5d523e840d5$var$genereteGenresList","Date","getFullYear","toFixed","insertAdjacentHTML","async","onSpinnerEnabled","response","fetch","onSpinnerDisabled","json","$76d8f5d523e840d5$var$updateLibraryMarkup","contains","addEventListener","parsedQueueFilms","$bnGUG","closeModalBtn","event","key","$76d8f5d523e840d5$var$closeModalOnEscape","backdgop","target","currentTarget","$76d8f5d523e840d5$var$closeModalOnbackDrop"],"version":3,"file":"library.99e75fd7.js.map"}