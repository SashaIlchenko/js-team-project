{"mappings":"qhBAAAA,EAAA,S,yCCKA,MAAMC,EAA0BC,SAASC,cAAc,kBACjDC,EAAiBF,SAASC,cAAc,iBACxCE,EAAoBH,SAASC,cAAc,eAC3CG,EAAkBJ,SAASC,cAAc,aAGlCI,GAFUL,SAASC,cAAc,eAEZK,aAAaC,QAAQ,gBAC1CC,EAAmBF,aAAaC,QAAQ,aAqBrD,SAASE,IACPL,EAAgBM,UAAUC,OAAO,iBACjCR,EAAkBO,UAAUE,IAAI,iBAEhCV,EAAeW,UAAY,GAE3B,MAAMC,EAAqBC,KAAKC,MAAMV,aAAaC,QAAQ,gBAE3D,GAAKO,EAGE,CACLf,EAAwBkB,MAAMC,QAAU,OAClBJ,EAAmBK,KAAIC,GACpCC,EAAsBD,GAAIE,MAAKC,IACpCC,EAAyBD,EAAA,KAG/B,MATExB,EAAwBkB,MAAMC,QAAU,OAU5C,CAuBA,SAASM,GAAyBJ,GAChCA,EAAEK,MACFA,EAAKC,KACLA,EAAIC,YACJA,EAAWC,OACXA,EAAMC,aACNA,EAAYC,eACZA,EAAcC,aACdA,IAEA,MAAMC,EAAW,GACjBA,EAASC,KAAKL,EAAOT,KAAIe,GAAWA,EAAQd,MAC5C,MAAMe,EAAYH,EAAS,GAErBI,EAAS,+BAA+BhB,oGAEEO,oBACnCF,GAASC,+KAMgBD,GAASC,GAAMW,2DAWvD,SAA4BC,GAC1B,MAAMC,EAAc,GAMpB,OALAC,EAAAZ,OAAOa,SAAQC,IACTJ,EAAIK,SAASD,EAAMtB,KACrBmB,EAAYN,KAAKS,EAAMhB,KAAI,IAG3Ba,EAAYK,OAAS,EAChB,GAAGL,EAAY,OAAOA,EAAY,YAGpCA,EAAYM,KAAK,KAC1B,CAtBsCC,CAClCX,QACK,IAAIY,KAAKlB,GAAgBC,GAAgBkB,0DACRjB,EAAakB,QAAQ,4CAI7D/C,EAAegD,mBAAmB,YAAad,EACjD,CAgBAe,eAAe9B,EAAsBD,IAInC,EAAAgC,EAAAC,oBACA,MAAMC,QAAiBC,MACrB,sCAAoBnC,8DAEtB,EAAAgC,EAAAI,qBAIA,aAFmBF,EAASG,MAG9B,CA5GAhD,IAEAN,EAAkBuD,iBAAiB,QAASjD,GAC5CL,EAAgBsD,iBAAiB,SAuBjC,WACEvD,EAAkBO,UAAUC,OAAO,iBACnCP,EAAgBM,UAAUE,IAAI,iBAE9BV,EAAeW,UAAY,GAE3B,MAAM8C,EAAmB5C,KAAKC,MAAMV,aAAaC,QAAQ,cAEzD,IAAKoD,EAEH,YADA5D,EAAwBkB,MAAMC,QAAU,SAGxCnB,EAAwBkB,MAAMC,QAAU,OAClByC,EAAiBxC,KAAIC,GAClCC,EAAsBD,GAAIE,MAAKC,IACpCC,EAAyBD,EAAA,KAIjC,I,4CCzEA,IAAAqC,EAAA9D,EAAA,SAIA+D,QAAQC,IAAIzD,EAAmBuC,QAC/B,MAAMmB,EAAY/D,SAASC,cAAc,mBACnC+D,EAAU,CACZC,WAAY5D,EAAmBuC,QAAUpC,EACzC0D,aAAc,EACdC,aAAc,EACdC,KAAM,EACNC,aAAa,EACbC,mBAAoB,kBACpBC,kBAAmB,kBAGJ,IAAIC,EAAAZ,GAAJ,CAAeG,EAAWC,GAElCS,GAAG,aAAa,SAAUC,GACfA,EAAUN,KAC5BO,YAAY9D,UAAY,EAW5B","sources":["src/library.js","src/js/render-library.js","src/js/pagination-library.js"],"sourcesContent":["import './js/darktheme';\nimport './js/render-library';\n\nimport './js/page-content-loader';\nimport './js/loader-spinner';\nimport './js/scroll-up-arrow';\nimport './js/modalMovie.js';\nimport './js/pagination-library';\n","import axios from 'axios';\nimport { onSpinnerDisabled, onSpinnerEnabled } from './loader-spinner';\nimport { genres } from '../data/genres.json';\nimport { onFooterFixed, onFooterNoFixed } from './render-cards';\n\nconst emptyLibraryContaineRef = document.querySelector('.library-empty');\nconst libraryListRef = document.querySelector('.library_list');\nconst watchedLibraryBtn = document.querySelector('.js-watched');\nconst queueLibraryBtn = document.querySelector('.js-queue');\nconst pageLibraryRef = document.querySelector('#js-library');\n\nexport const watchedStorageData = localStorage.getItem('watchedList');\nexport const queueStorageData = localStorage.getItem('queueList');\n\n// pageLibraryRef.addEventListener('click', onPageLibraryBtnClick);\n\n// function onPageLibraryBtnClick() {\n//   if (!watchedStorageData) {\n//     emptyLibraryContaineRef.style.display = 'block'; //gifka\n//     // watchedLibraryBtn.classList.add('active-button');\n//     // return;\n//   } else {\n//     watchedLibraryBtn.classList.add('active-button');\n//     emptyLibraryContaineRef.style.display = 'none';\n//   }\n// }\n\n// watchedLibraryBtn.classList.add('active-button');\nonWatchedLibraryBtnClick();\n\nwatchedLibraryBtn.addEventListener('click', onWatchedLibraryBtnClick);\nqueueLibraryBtn.addEventListener('click', onQueueLibraryBtnClick);\n\nfunction onWatchedLibraryBtnClick() {\n  queueLibraryBtn.classList.remove('active-button');\n  watchedLibraryBtn.classList.add('active-button');\n\n  libraryListRef.innerHTML = '';\n\n  const parsedWatchedFilms = JSON.parse(localStorage.getItem('watchedList'));\n\n  if (!parsedWatchedFilms) {\n    emptyLibraryContaineRef.style.display = 'block';\n    return;\n  } else {\n    emptyLibraryContaineRef.style.display = 'none';\n    const arrLocalFilms = parsedWatchedFilms.map(id => {\n      return fetchLibraryMovieByID(id).then(data => {\n        createMovieLibraryMarkup(data);\n      });\n    });\n  }\n}\n\nfunction onQueueLibraryBtnClick() {\n  watchedLibraryBtn.classList.remove('active-button');\n  queueLibraryBtn.classList.add('active-button');\n\n  libraryListRef.innerHTML = '';\n\n  const parsedQueueFilms = JSON.parse(localStorage.getItem('queueList'));\n\n  if (!parsedQueueFilms) {\n    emptyLibraryContaineRef.style.display = 'block';\n    return;\n  } else {\n    emptyLibraryContaineRef.style.display = 'none';\n    const arrLocalFilms = parsedQueueFilms.map(id => {\n      return fetchLibraryMovieByID(id).then(data => {\n        createMovieLibraryMarkup(data);\n      });\n    });\n  }\n}\n\nfunction createMovieLibraryMarkup({\n  id,\n  title,\n  name,\n  poster_path,\n  genres,\n  release_date,\n  first_air_date,\n  vote_average,\n}) {\n  const genreIds = [];\n  genreIds.push(genres.map(genreId => genreId.id));\n  const genresArr = genreIds[0];\n\n  const markup = `<li class=\"movieCard\" data=\"${id}\">\n      <div class=\"movieCard__img-wrapper\">\n      <img src=\"https://image.tmdb.org/t/p/w500/${poster_path}\"\n        alt=\"${title || name} movie poster\"\n        loading=\"lazy\"\n        class=\"movieCard__img\"\n      />\n      </div>\n      <div class=\"movieCard__text\">\n        <h2 class=\"movieCard__title\">${(title || name).toUpperCase()}</h2>\n        <p class=\"movieCard__info\"> ${genereteGenresList(\n    genresArr\n  )} | ${new Date(release_date || first_air_date).getFullYear()}\n          <span class=\"movieCard__rate\">${vote_average.toFixed(1)}</span></p>\n      </div>\n      </li> `;\n\n  libraryListRef.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction genereteGenresList(ids) {\n  const movieGenres = [];\n  genres.forEach(genre => {\n    if (ids.includes(genre.id)) {\n      movieGenres.push(genre.name);\n    }\n  });\n  if (movieGenres.length > 2) {\n    return `${movieGenres[0]}, ${movieGenres[1]}, Other`;\n  }\n\n  return movieGenres.join(', ');\n}\n\nasync function fetchLibraryMovieByID(id) {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const API_KEY = 'e8d94f3e976148bda0a5c640d4df112b';\n\n  onSpinnerEnabled();\n  const response = await fetch(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  onSpinnerDisabled();\n\n  const data = await response.json();\n\n  return data;\n}\n","import Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.min.css';\nimport '/src/sass/components/_pagination.scss';\nimport { watchedStorageData, queueStorageData } from './render-library';\nconsole.log(watchedStorageData.length)\nconst container = document.querySelector('.tui-pagination');\nconst options = {\n    totalItems: watchedStorageData.length || queueStorageData,\n    itemsPerPage: 8,\n    visiblePages: 5,\n    page: 1,\n    centerAlign: false,\n    firstItemClassName: 'tui-first-child',\n    lastItemClassName: 'tui-last-child',\n};\n\nconst pagination = new Pagination(container, options);\n\npagination.on('afterMove', function (eventData) {\n    var currentPage = eventData.page;\n    galleryList.innerHTML = '';\n    // onFooterFixed();\n    // onSpinnerEnabled();\n    // const data =  getQueryMovies(localStorage.getItem('Search'), currentPage);\n    // try {\n    //     onSpinnerDisabled();\n    //     createMarkupOfTrendingMovies(data);\n    //     onFooterNoFixed();\n    // } catch (err) {\n    //     console.log(err);\n    // }\n});\n"],"names":["parcelRequire","$76d8f5d523e840d5$var$emptyLibraryContaineRef","document","querySelector","$76d8f5d523e840d5$var$libraryListRef","$76d8f5d523e840d5$var$watchedLibraryBtn","$76d8f5d523e840d5$var$queueLibraryBtn","$76d8f5d523e840d5$export$43d682d87a7f8ef5","localStorage","getItem","$76d8f5d523e840d5$export$574324421d33b271","$76d8f5d523e840d5$var$onWatchedLibraryBtnClick","classList","remove","add","innerHTML","parsedWatchedFilms","JSON","parse","style","display","map","id","$76d8f5d523e840d5$var$fetchLibraryMovieByID","then","data","$76d8f5d523e840d5$var$createMovieLibraryMarkup","title","name","poster_path","genres","release_date","first_air_date","vote_average","genreIds","push","genreId","genresArr","markup","toUpperCase","ids","movieGenres","$2j7ES","forEach","genre","includes","length","join","$76d8f5d523e840d5$var$genereteGenresList","Date","getFullYear","toFixed","insertAdjacentHTML","async","$6pIJ7","onSpinnerEnabled","response","fetch","onSpinnerDisabled","json","addEventListener","parsedQueueFilms","$fb9GJ","console","log","$37dad58aaab9173a$var$container","$37dad58aaab9173a$var$options","totalItems","itemsPerPage","visiblePages","page","centerAlign","firstItemClassName","lastItemClassName","$parcel$interopDefault","on","eventData","galleryList"],"version":3,"file":"library.28b404bf.js.map"}